# Copyright 2022 CMakePP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Build and Deploy Documentation

on:
  workflow_call:
    inputs:
      api_docs_dir:
        required: false
        type: string
        default: 'docs/source/api/generated_docs'
      api_docs_module:
        required: false
        type: string
        default: ''
      cmake_source_dir:
        required: false
        type: string
        default: 'cmake'
      docs_dir:
        required: false
        type: string
        default: 'docs'
      python_version:
        required: false
        type: string
        default: '3.7'
    secrets:
      token:
        required: true

jobs:
  Build-Documentation:
    runs-on: ubuntu-latest

    env:
      api_docs_dir: ${{ inputs.api_docs_dir }}
      api_docs_module: ${{ inputs.api_docs_module }}
      build_api_docs_dir: "build/api_docs"
      cmake_source_dir: ${{ inputs.cmake_source_dir }}
      docs_dir: ${{ inputs.docs_dir }}
      venv: "virt_env"
    
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ inputs.python_version }}
          
      - name: Create Virtual Environment
        run: |
          python3 -m venv ${venv}
          source ${venv}/bin/activate
          pip3 install --upgrade pip

      - name: Install Dependencies
        run: |
          source ${venv}/bin/activate
          pip3 install -r ${docs_dir}/requirements.txt

      - name: Generate API Documentation
        run: |
          if [[ "${api_docs_module}" == "" ]]; then
              echo "Skipping CMinx API documentation generation."
              exit
          fi

          source ${venv}/bin/activate

          # Install CMinx
          pip install CMinx

          # Start with a clean slate
          rm -rf ${docs_dir}/build
          rm -rf ${build_api_docs_dir}
          rm -rf ${api_docs_dir}

          # Create a build directory for the api docs to be generated in
          mkdir -p build

          # Build the API docs with CMinx
          cminx \
<<<<<<< Updated upstream
              "cmake/${api_docs_module}" \
              -o "${build_api_docs_dir}/${api_docs_module}" \
=======
              "${cmake_source_dir}/${api_docs_module}" \
              -o "build/api_docs/${api_docs_module}" \
>>>>>>> Stashed changes
              -r -p ${api_docs_module}

          # Move the api docs to the documentation directory
          mv ${build_api_docs_dir}/ ${api_docs_dir}

      - name: Build Documentation
        run: |
          source ${venv}/bin/activate
          cd ${docs_dir}
          make html
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.token }}
          publish_dir: ./${{ inputs.docs_dir }}/build/html
